export default mixmix;var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function mixmix(){for(var o=[],t=0;t<arguments.length;t++)o[t]=arguments[t];function e(t){var n=this,r=o.map(function(t){return Object.getOwnPropertyDescriptors(t).name.value});Object.keys(Object(t)).forEach(function(e){r.includes(e)&&Object.defineProperties(n,Object.getOwnPropertyDescriptors(new(o.filter(function(t){return t.name===e})[0])))})}return o.forEach(function(t){n(e,t),n(e.prototype,t.prototype)}),e;function n(t,e){var n=Object.getOwnPropertyNames(e),r=Object.getOwnPropertyDescriptors(e),o=Object.getOwnPropertyNames(function(){}).concat(["constructor"]),c=t;return n.forEach(function(t){o.includes(t)||Object.defineProperty(c,t,__assign(__assign({},r[t]),{enumerable:0}))}),c}} 
