const e=Object.getOwnPropertyNames(class{}).concat("name"),t=["constructor"];function n(...n){class o{constructor(e=null){const t=n.map((e=>e?.name)),r=Array.isArray(e)||null==e,o=r?t:Object.keys(e);for(let c=0,s=o.length;c<s;++c){const s=o[c],p=r?c:t.indexOf(s);-1!==p&&Object.defineProperties(this,Object.getOwnPropertyDescriptors(new n[p](...r?e:e[s])))}}}const c=n.map((e=>e.name)).join("");Object.defineProperty(o,"name",{value:c});for(let c=0,s=n.length;c<s;++c){const s=n[c];r(o,s,e),r(o.prototype,s.prototype,t)}return o}function r(e,t,n){const r=Object.getOwnPropertyDescriptors(t),o=Object.keys(r);for(let t=0,c=o.length;t<c;++t){const c=o[t];-1===n.indexOf(c)&&Object.defineProperty(e,c,r[c])}}export default n;
//# sourceMappingURL=mixmix.min.esm.js.map
